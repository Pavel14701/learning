import time
import asyncio
import pandas as pd

# –ò–º–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–æ–≤ –∏–∑ –º–æ–¥—É–ª—è `src.infra`
from src.infra.approximation import ApproximationModel
from src.infra.prepare import DataProcessor
from src.infra.segmentation import SegmentationModel
from src.infra.visual import Visualization

# –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
start_time = time.time()

# üîπ **–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö**
dataframe = pd.read_excel("/content/drive/MyDrive/dataset.xlsx", skiprows=2)
data_x = dataframe["–í—Ä–µ–º—è, —Å"].values
data_y = dataframe["–°–∫–æ—Ä–æ—Å—Ç—å v, –º/—Å"].values

# üîπ **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö**
X, y = DataProcessor.prepare_segmentation_data(data_x, data_y)

# üîπ **–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏**
segmentation_model = SegmentationModel()
model, scaler = segmentation_model.train(X, y)

# üîπ **–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤**
segments_indices = segmentation_model.predict_segments(model, scaler, data_x, data_y)

# üîπ **–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–µ–≥–º–µ–Ω—Ç–æ–≤**
segments = [{'time': data_x[start:end + 1], 'velocity': data_y[start:end + 1], 'start_idx': start, 'end_idx': end}
            for start, end in segments_indices]

# üîπ **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –∞–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏–∏**
approximation_model = ApproximationModel()
approx_models = asyncio.run(approximation_model.train_parallel_async(segments))

# üîπ **–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤**
visualizer = Visualization(data_x, data_y, segments, approx_models)
visualizer.visualize_results()

# üîπ **–í—ã–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è**
end_time = time.time()
print(f"‚úÖ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
